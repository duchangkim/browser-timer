name: TEST
on:
  push:
    branches: [ actionsTest ]
env:
  TRIGGERED_BRANCH: ${{ github.ref == 'refs/heads/main' && 'main' || github.ref == 'refs/heads/actionsTest' && 'actionsTest'}}
jobs:
  deploy:
      
    runs-on: ubuntu-latest
    steps:
      - name: Get github actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Setting environment variables
        run: |
          echo "AWS_DEFAULT_REGION=us-east-2" >> $GITHUB_ENV
          echo "AWS_SG_NAME=github-actions" >> $GITHUB_ENV

      - name: Add github actions IP to security group
        run: |
          aws ec2 authorize-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECURE_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECURE_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: dev deploy
        uses: appleboy/ssh-action@master
        if: ${{ env.TRIGGERED_BRANCH == 'actionsTest' }}
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.TEST_USERNAME }}
          key: ${{ secrets.TEST_SSH_KEY }}
          script: |
            cd /var/www/browser-timer
            pwd

      - name: main deploy
        uses: appleboy/ssh-action@master
        if: ${{ env.TRIGGERED_BRANCH == 'main' }}
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.TEST_USERNAME }}
          key: ${{ secrets.TEST_SSH_KEY }}
          script: | 
            ${{ env.PRE_BUILD_SCRIPT }}
            npm run dev-build

        - name: Remove github actions IP from security group
          run: |
            aws ec2 revoke-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECURE_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECURE_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          if: ${{ always() }}